require:
  - rubocop-performance
  - rubocop-rails

AllCops:
  Exclude:
    - "bin/**/*"
    - "db/schema.rb"
    # - 'config/**/*'
    - "node_modules/**/*"
    # - 'script/**/*'
    # - 'support/**/*'
    - "tmp/**/*"
    # - 'test/**/*'

  # Extra details are not displayed in offense messages by default. Change
  # behavior by overriding ExtraDetails, or by giving the
  # `-E/--extra-details` option.
  ExtraDetails: true


  # What MRI version of the Ruby interpreter is the inspected code intended to
  # run on? (If there is more than one, set this to the lowest version.)
  # If a value is specified for TargetRubyVersion then it is used. Acceptable
  # values are specificed as a float (i.e. 3.0); the teeny version of Ruby
  # should not be included. If the project specifies a Ruby version in the
  # .tool-versions or .ruby-version files, Gemfile or gems.rb file, RuboCop will
  # try to determine the desired version of Ruby by inspecting the
  # .tool-versions file first, then .ruby-version, followed by the Gemfile.lock
  # or gems.locked file. (Although the Ruby version is specified in the Gemfile
  # or gems.rb file, RuboCop reads the final value from the lock file.) If the
  # Ruby version is still unresolved, RuboCop will use the oldest officially
  # supported Ruby version (currently Ruby 2.5).
  TargetRubyVersion: 3.0
#################### Layout ###########################

Layout/ExtraSpacing:
  # Description: 'Do not use unnecessary spacing.'
  # Enabled: true
  # VersionAdded: '0.49'
  # When true, allows most uses of extra spacing if the intent is to align
  # things with the previous or next line, not counting empty lines or comment
  # lines.
  # AllowForAlignment: true
  # When true, allows things like 'obj.meth(arg)  # comment',
  # rather than insisting on 'obj.meth(arg) # comment'.
  # If done for alignment, either this OR AllowForAlignment will allow it.
  AllowBeforeTrailingComments: true
  # When true, forces the alignment of `=` in assignments on consecutive lines.
  # ForceEqualSignAlignment: false

Layout/FirstHashElementIndentation:
  # Description: "Checks the indentation of the first key in a hash literal."
  Enabled: true
  # VersionAdded: "0.68"
  # VersionChanged: "0.77"
  # The value `special_inside_parentheses` means that hash literals with braces
  # that have their opening brace on the same line as a surrounding opening
  # round parenthesis, shall have their first key indented relative to the
  # first position inside the parenthesis.
  #
  # The value `consistent` means that the indentation of the first key shall
  # always be relative to the first position of the line where the opening
  # brace is.
  #
  # The value `align_braces` means that the indentation of the first key shall
  # always be relative to the position of the opening brace.
  EnforcedStyle: consistent
  SupportedStyles:
    - special_inside_parentheses
    - consistent
    - align_braces
  # By default the indentation width from `Layout/IndentationWidth` is used,
  # but it can be overridden by setting this parameter.
  IndentationWidth: ~

Layout/FirstHashElementLineBreak:
  # Description: >-
  #   Checks for a line break before the first element in a
  #   multi-line hash.
  Enabled: true
  # VersionAdded: "0.49"

# Layout/SpaceInsideArrayLiteralBrackets:
#   Description: "Checks the spacing inside array literal brackets."
#   Enabled: true
#   VersionAdded: "0.52"
#   EnforcedStyle: space
#   SupportedStyles:
#     - space
#     - no_space
#     # 'compact' normally requires a space inside the brackets, with the exception
#     # that successive left brackets or right brackets are collapsed together
#     - compact
#   EnforcedStyleForEmptyBrackets: no_space
#   SupportedStylesForEmptyBrackets:
#     - space
#     - no_space

Layout/LineLength:
  Description: "Checks that line length does not exceed the configured limit."
  StyleGuide: "#max-line-length"
  Enabled: true
  # VersionAdded: "0.25"
  # VersionChanged: "1.4"
  Max: 120
  # To make it possible to copy or click on URIs in the code, we allow lines
  # containing a URI to be longer than Max.
  AllowHeredoc: true
  AllowURI: true
  URISchemes:
    - http
    - https
  # The IgnoreCopDirectives option causes the LineLength rule to ignore cop
  # directives like '# rubocop: enable ...' when calculating a line's length.
  IgnoreCopDirectives: true
  # The AllowedPatterns option is a list of !ruby/regexp and/or string
  # elements. Strings will be converted to Regexp objects. A line that matches
  # any regular expression listed in this option will be ignored by LineLength.
  AllowedPatterns: []
  # IgnoredPatterns: [] # deprecated
  Exclude:
    - "db/migrate/*.rb"
    - "db/schema.rb"
    - "config/initializers/*.rb"
    - "app/views/admin/**/*.arb"

#################### Metrics ###########################

Metrics/AbcSize:
  Description: >-
    A calculated magnitude based on number of assignments,
    branches, and conditions.
  Reference:
    - http://c2.com/cgi/wiki?AbcMetric
    - https://en.wikipedia.org/wiki/ABC_Software_Metric
  Enabled: false
  # VersionAdded: "0.27"
  # VersionChanged: "1.5"
  # The ABC size is a calculated magnitude, so this number can be an Integer or
  # a Float.
  IgnoredMethods: []
  CountRepeatedAttributes: true
  Max: 17
  # Exclude:
  #   - "db/**/*.rb"

Metrics/BlockLength:
  Description: "Avoid long blocks with many lines."
  Enabled: true
  # VersionAdded: "0.44"
  # VersionChanged: "1.5"
  CountComments: false # count full line comments?
  Max: 25
  CountAsOne: []
  # ExcludedMethods: [] # deprecated, retained for backwards compatibility
  IgnoredMethods:
    # By default, exclude the `#refine` method, as it tends to have larger
    # associated blocks.
    - refine
  Exclude:
    - "app/admin/**/*.rb"
    - "config/environments/*.rb"
    - "config/initializers/*.rb"
    - "db/**/*.rb"
    - "app/views/admin/**/*.arb"

Metrics/MethodLength:
  Description: "Avoid methods longer than 10 lines of code."
  StyleGuide: "#short-methods"
  Enabled: true
  # VersionAdded: "0.25"
  # VersionChanged: "1.5"
  CountComments: false # count full line comments?
  Max: 20
  CountAsOne: []
  # ExcludedMethods: [] # deprecated, retained for backwards compatibility
  IgnoredMethods: []
  Exclude:
    - "db/**/*.rb"

#################### Style ###############################

Style/Documentation:
  Description: "Document classes and non-namespace modules."
  Enabled: false
  # VersionAdded: "0.9"
  AllowedConstants: []
  Exclude:
    - "spec/**/*"
    - "test/**/*"

Style/EmptyMethod:
  Description: "Checks the formatting of empty method definitions."
  StyleGuide: "#no-single-line-methods"
  Enabled: true
  # VersionAdded: "0.46"
  EnforcedStyle: expanded
  SupportedStyles:
    - compact
    - expanded

Style/FrozenStringLiteralComment:
  Description: >-
    Add the frozen_string_literal comment to the top of files
    to help transition to frozen string literals by default.
  Enabled: true
  # VersionAdded: "0.36"
  # VersionChanged: "0.79"
  EnforcedStyle: always
  SupportedStyles:
    # `always` will always add the frozen string literal comment to a file
    # regardless of the Ruby version or if `freeze` or `<<` are called on a
    # string literal. It is possible that this will create errors.
    - always
    # `always_true` will add the frozen string literal comment to a file,
    # similarly to the `always` style, but will also change any disabled
    # comments (e.g. `# frozen_string_literal: false`) to be enabled.
    - always_true
    # `never` will enforce that the frozen string literal comment does not
    # exist in a file.
    - never
  SafeAutoCorrect: false
  Exclude:
    - "db/**/*.rb"
    - "Gemfile"
    - "Rakefile"
    - "config/**/*.rb"
    - "config.ru"

Style/RedundantSelf:
  Description: "Don't use self where it's not needed."
  StyleGuide: "#no-self-unless-required"
  Enabled: false
  # VersionAdded: "0.10"
  # VersionChanged: "0.13"

Style/StringLiterals:
  Description: "Checks if uses of quotes match the configured preference."
  StyleGuide: "#consistent-string-literals"
  Enabled: true
  # VersionAdded: "0.9"
  # VersionChanged: "0.36"
  EnforcedStyle: double_quotes
  SupportedStyles:
    - single_quotes
    - double_quotes
  # If `true`, strings which span multiple lines using `\` for continuation must
  # use the same type of quotes on each line.
  ConsistentQuotesInMultiline: false
